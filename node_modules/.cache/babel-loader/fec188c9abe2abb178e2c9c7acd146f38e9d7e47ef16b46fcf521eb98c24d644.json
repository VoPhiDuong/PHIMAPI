{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useSearchParams}from'react-router-dom';import{Container,Typography,Box}from'@mui/material';import{Search as SearchIcon}from'@mui/icons-material';import MovieGrid from'../components/MovieGrid';import FilterBar from'../components/FilterBar';import Pagination from'../components/Pagination';import LoadingIndicator from'../components/LoadingIndicator';import ErrorDisplay from'../components/ErrorDisplay';import{listApi}from'../services/api';import{DEFAULT_MOVIE_LIMIT}from'../constants/constants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Search=()=>{const[searchParams,setSearchParams]=useSearchParams();const[movies,setMovies]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[totalPages,setTotalPages]=useState(1);// Lấy các tham số từ URL\nconst keyword=searchParams.get('keyword')||'';const page=parseInt(searchParams.get('page'))||1;const sortField=searchParams.get('sort_field')||'modified.time';const sortType=searchParams.get('sort_type')||'desc';const language=searchParams.get('language')||'';const category=searchParams.get('category')||'';const country=searchParams.get('country')||'';const year=searchParams.get('year')||'';const limit=parseInt(searchParams.get('limit'))||DEFAULT_MOVIE_LIMIT;// Lấy kết quả tìm kiếm từ API\nuseEffect(()=>{const fetchSearchResults=async()=>{if(!keyword){setMovies([]);setLoading(false);return;}try{var _response$pagination;setLoading(true);setError(null);const response=await listApi.searchMovies({keyword,page,sort_field:sortField,sort_type:sortType,language,category,country,year,limit});setMovies(response.data||[]);setTotalPages(((_response$pagination=response.pagination)===null||_response$pagination===void 0?void 0:_response$pagination.totalPages)||1);setLoading(false);}catch(err){console.error('Error fetching search results:',err);setError('Đã xảy ra lỗi khi tìm kiếm phim. Vui lòng thử lại sau.');setLoading(false);}};fetchSearchResults();},[keyword,page,sortField,sortType,language,category,country,year,limit]);// Xử lý khi thay đổi trang\nconst handlePageChange=value=>{const newSearchParams=new URLSearchParams(searchParams);newSearchParams.set('page',value.toString());setSearchParams(newSearchParams);// Cuộn lên đầu trang\nwindow.scrollTo({top:0,behavior:'smooth'});};// Xử lý khi thay đổi bộ lọc\nconst handleFilterChange=filters=>{const newSearchParams=new URLSearchParams();// Giữ từ khóa tìm kiếm\nnewSearchParams.set('keyword',keyword);// Đặt lại trang về 1 khi thay đổi bộ lọc\nnewSearchParams.set('page','1');// Thêm các tham số lọc vào URL\nif(filters.sort_field)newSearchParams.set('sort_field',filters.sort_field);if(filters.sort_type)newSearchParams.set('sort_type',filters.sort_type);if(filters.sort_lang)newSearchParams.set('language',filters.sort_lang);if(filters.category)newSearchParams.set('category',filters.category);if(filters.country)newSearchParams.set('country',filters.country);if(filters.year)newSearchParams.set('year',filters.year);if(filters.limit)newSearchParams.set('limit',filters.limit.toString());setSearchParams(newSearchParams);};// Xử lý thử lại khi có lỗi\nconst handleRetry=()=>{window.location.reload();};return/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsxs(Box,{sx:{pt:2,pb:4},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",component:\"h1\",sx:{mb:3,fontWeight:'bold',display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(SearchIcon,{fontSize:\"large\"}),keyword?\"K\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm: \\\"\".concat(keyword,\"\\\"\"):'Tìm kiếm phim']}),/*#__PURE__*/_jsx(FilterBar,{onFilterChange:handleFilterChange,initialFilters:{sort_field:sortField,sort_type:sortType,sort_lang:language,category:category,country:country,year:year}}),loading?/*#__PURE__*/_jsx(LoadingIndicator,{message:\"\\u0110ang t\\u1EA3i k\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm...\"}):error?/*#__PURE__*/_jsx(ErrorDisplay,{message:error,onRetry:handleRetry}):movies.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MovieGrid,{movies:movies,totalPages:totalPages,currentPage:page,onPageChange:handlePageChange}),totalPages>1&&/*#__PURE__*/_jsx(Pagination,{currentPage:page,totalPages:totalPages,onPageChange:handlePageChange})]}):/*#__PURE__*/_jsx(Box,{sx:{textAlign:'center',py:5},children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Kh\\xF4ng t\\xECm th\\u1EA5y phim n\\xE0o ph\\xF9 h\\u1EE3p v\\u1EDBi t\\u1EEB kh\\xF3a \\\"\",keyword,\"\\\".\"]})})]})});};export default Search;","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","Container","Typography","Box","Search","SearchIcon","MovieGrid","FilterBar","Pagination","LoadingIndicator","ErrorDisplay","listApi","DEFAULT_MOVIE_LIMIT","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","searchParams","setSearchParams","movies","setMovies","loading","setLoading","error","setError","totalPages","setTotalPages","keyword","get","page","parseInt","sortField","sortType","language","category","country","year","limit","fetchSearchResults","_response$pagination","response","searchMovies","sort_field","sort_type","data","pagination","err","console","handlePageChange","value","newSearchParams","URLSearchParams","set","toString","window","scrollTo","top","behavior","handleFilterChange","filters","sort_lang","handleRetry","location","reload","maxWidth","children","sx","pt","pb","variant","component","mb","fontWeight","display","alignItems","gap","fontSize","concat","onFilterChange","initialFilters","message","onRetry","length","currentPage","onPageChange","textAlign","py"],"sources":["D:/Phim API/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container, Typography, Box } from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\nimport MovieGrid from '../components/MovieGrid';\nimport FilterBar from '../components/FilterBar';\nimport Pagination from '../components/Pagination';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport ErrorDisplay from '../components/ErrorDisplay';\n\nimport { listApi } from '../services/api';\nimport { DEFAULT_MOVIE_LIMIT } from '../constants/constants';\n\nconst Search = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  \n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalPages, setTotalPages] = useState(1);\n  \n  // Lấy các tham số từ URL\n  const keyword = searchParams.get('keyword') || '';\n  const page = parseInt(searchParams.get('page')) || 1;\n  const sortField = searchParams.get('sort_field') || 'modified.time';\n  const sortType = searchParams.get('sort_type') || 'desc';\n  const language = searchParams.get('language') || '';\n  const category = searchParams.get('category') || '';\n  const country = searchParams.get('country') || '';\n  const year = searchParams.get('year') || '';\n  const limit = parseInt(searchParams.get('limit')) || DEFAULT_MOVIE_LIMIT;\n\n  // Lấy kết quả tìm kiếm từ API\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      if (!keyword) {\n        setMovies([]);\n        setLoading(false);\n        return;\n      }\n      \n      try {\n        setLoading(true);\n        setError(null);\n        \n        const response = await listApi.searchMovies({\n          keyword,\n          page,\n          sort_field: sortField,\n          sort_type: sortType,\n          language,\n          category,\n          country,\n          year,\n          limit\n        });\n\n        setMovies(response.data || []);\n        setTotalPages(response.pagination?.totalPages || 1);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching search results:', err);\n        setError('Đã xảy ra lỗi khi tìm kiếm phim. Vui lòng thử lại sau.');\n        setLoading(false);\n      }\n    };\n\n    fetchSearchResults();\n  }, [keyword, page, sortField, sortType, language, category, country, year, limit]);\n\n  // Xử lý khi thay đổi trang\n  const handlePageChange = (value) => {\n    const newSearchParams = new URLSearchParams(searchParams);\n    newSearchParams.set('page', value.toString());\n    setSearchParams(newSearchParams);\n    \n    // Cuộn lên đầu trang\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Xử lý khi thay đổi bộ lọc\n  const handleFilterChange = (filters) => {\n    const newSearchParams = new URLSearchParams();\n    \n    // Giữ từ khóa tìm kiếm\n    newSearchParams.set('keyword', keyword);\n    \n    // Đặt lại trang về 1 khi thay đổi bộ lọc\n    newSearchParams.set('page', '1');\n    \n    // Thêm các tham số lọc vào URL\n    if (filters.sort_field) newSearchParams.set('sort_field', filters.sort_field);\n    if (filters.sort_type) newSearchParams.set('sort_type', filters.sort_type);\n    if (filters.sort_lang) newSearchParams.set('language', filters.sort_lang);\n    if (filters.category) newSearchParams.set('category', filters.category);\n    if (filters.country) newSearchParams.set('country', filters.country);\n    if (filters.year) newSearchParams.set('year', filters.year);\n    if (filters.limit) newSearchParams.set('limit', filters.limit.toString());\n    \n    setSearchParams(newSearchParams);\n  };\n\n  // Xử lý thử lại khi có lỗi\n  const handleRetry = () => {\n    window.location.reload();\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ pt: 2, pb: 4 }}>\n        <Typography \n          variant=\"h4\" \n          component=\"h1\" \n          sx={{ \n            mb: 3, \n            fontWeight: 'bold',\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          }}\n        >\n          <SearchIcon fontSize=\"large\" />\n          {keyword ? `Kết quả tìm kiếm: \"${keyword}\"` : 'Tìm kiếm phim'}\n        </Typography>\n\n        <FilterBar \n          onFilterChange={handleFilterChange}\n          initialFilters={{\n            sort_field: sortField,\n            sort_type: sortType,\n            sort_lang: language,\n            category: category,\n            country: country,\n            year: year\n          }}\n        />\n\n        {loading ? (\n          <LoadingIndicator message=\"Đang tải kết quả tìm kiếm...\" />\n        ) : error ? (\n          <ErrorDisplay message={error} onRetry={handleRetry} />\n        ) : movies.length > 0 ? (\n          <>\n            <MovieGrid \n              movies={movies} \n              totalPages={totalPages} \n              currentPage={page} \n              onPageChange={handlePageChange} \n            />\n            \n            {totalPages > 1 && (\n              <Pagination \n                currentPage={page} \n                totalPages={totalPages} \n                onPageChange={handlePageChange} \n              />\n            )}\n          </>\n        ) : (\n          <Box sx={{ textAlign: 'center', py: 5 }}>\n            <Typography variant=\"h6\">\n              Không tìm thấy phim nào phù hợp với từ khóa \"{keyword}\".\n            </Typography>\n          </Box>\n        )}      \n      </Box>\n    </Container>\n  );\n};\n\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}