{"ast":null,"code":"var _jsxFileName = \"D:\\\\Phim API\\\\src\\\\components\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Pagination as MuiPagination, Box, useTheme, useMediaQuery } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  onChange,\n  sx\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // Xác định số lượng nút phân trang hiển thị dựa trên kích thước màn hình\n  const siblingCount = isMobile ? 0 : 1;\n  const boundaryCount = isMobile ? 1 : 2;\n  if (totalPages <= 1) return null;\n\n  // Sử dụng onChange nếu được cung cấp, nếu không thì sử dụng onPageChange\n  const handleChange = (_, page) => {\n    if (onChange) {\n      onChange(_, page);\n    } else if (onPageChange) {\n      onPageChange(page);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      my: 4,\n      ...sx\n    },\n    children: /*#__PURE__*/_jsxDEV(MuiPagination, {\n      count: totalPages,\n      page: currentPage,\n      onChange: handleChange,\n      color: \"primary\",\n      size: isMobile ? 'medium' : 'large',\n      siblingCount: siblingCount,\n      boundaryCount: boundaryCount,\n      showFirstButton: true,\n      showLastButton: true,\n      sx: {\n        '& .MuiPaginationItem-root': {\n          color: 'text.primary'\n        },\n        '& .MuiPaginationItem-page.Mui-selected': {\n          backgroundColor: 'primary.main',\n          color: 'white',\n          fontWeight: 'bold',\n          '&:hover': {\n            backgroundColor: 'primary.dark'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Pagination, \"25T5RqnpHPZx1hYuwXS/vSFcc1w=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","Pagination","MuiPagination","Box","useTheme","useMediaQuery","jsxDEV","_jsxDEV","currentPage","totalPages","onPageChange","onChange","sx","_s","theme","isMobile","breakpoints","down","siblingCount","boundaryCount","handleChange","_","page","display","justifyContent","my","children","count","color","size","showFirstButton","showLastButton","backgroundColor","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Phim API/src/components/Pagination.js"],"sourcesContent":["import React from 'react';\nimport { Pagination as MuiPagination, Box, useTheme, useMediaQuery } from '@mui/material';\n\nconst Pagination = ({ currentPage, totalPages, onPageChange, onChange, sx }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // Xác định số lượng nút phân trang hiển thị dựa trên kích thước màn hình\n  const siblingCount = isMobile ? 0 : 1;\n  const boundaryCount = isMobile ? 1 : 2;\n\n  if (totalPages <= 1) return null;\n\n  // Sử dụng onChange nếu được cung cấp, nếu không thì sử dụng onPageChange\n  const handleChange = (_, page) => {\n    if (onChange) {\n      onChange(_, page);\n    } else if (onPageChange) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        my: 4,\n        ...sx,\n      }}\n    >\n      <MuiPagination\n        count={totalPages}\n        page={currentPage}\n        onChange={handleChange}\n        color=\"primary\"\n        size={isMobile ? 'medium' : 'large'}\n        siblingCount={siblingCount}\n        boundaryCount={boundaryCount}\n        showFirstButton\n        showLastButton\n        sx={{\n          '& .MuiPaginationItem-root': {\n            color: 'text.primary',\n          },\n          '& .MuiPaginationItem-page.Mui-selected': {\n            backgroundColor: 'primary.main',\n            color: 'white',\n            fontWeight: 'bold',\n            '&:hover': {\n              backgroundColor: 'primary.dark',\n            },\n          },\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Pagination;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,IAAIC,aAAa,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1F,MAAMN,UAAU,GAAGA,CAAC;EAAEO,WAAW;EAAEC,UAAU;EAAEC,YAAY;EAAEC,QAAQ;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAMC,KAAK,GAAGV,QAAQ,CAAC,CAAC;EACxB,MAAMW,QAAQ,GAAGV,aAAa,CAACS,KAAK,CAACE,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;;EAE5D;EACA,MAAMC,YAAY,GAAGH,QAAQ,GAAG,CAAC,GAAG,CAAC;EACrC,MAAMI,aAAa,GAAGJ,QAAQ,GAAG,CAAC,GAAG,CAAC;EAEtC,IAAIN,UAAU,IAAI,CAAC,EAAE,OAAO,IAAI;;EAEhC;EACA,MAAMW,YAAY,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAK;IAChC,IAAIX,QAAQ,EAAE;MACZA,QAAQ,CAACU,CAAC,EAAEC,IAAI,CAAC;IACnB,CAAC,MAAM,IAAIZ,YAAY,EAAE;MACvBA,YAAY,CAACY,IAAI,CAAC;IACpB;EACF,CAAC;EAED,oBACEf,OAAA,CAACJ,GAAG;IACFS,EAAE,EAAE;MACFW,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,EAAE,EAAE,CAAC;MACL,GAAGb;IACL,CAAE;IAAAc,QAAA,eAEFnB,OAAA,CAACL,aAAa;MACZyB,KAAK,EAAElB,UAAW;MAClBa,IAAI,EAAEd,WAAY;MAClBG,QAAQ,EAAES,YAAa;MACvBQ,KAAK,EAAC,SAAS;MACfC,IAAI,EAAEd,QAAQ,GAAG,QAAQ,GAAG,OAAQ;MACpCG,YAAY,EAAEA,YAAa;MAC3BC,aAAa,EAAEA,aAAc;MAC7BW,eAAe;MACfC,cAAc;MACdnB,EAAE,EAAE;QACF,2BAA2B,EAAE;UAC3BgB,KAAK,EAAE;QACT,CAAC;QACD,wCAAwC,EAAE;UACxCI,eAAe,EAAE,cAAc;UAC/BJ,KAAK,EAAE,OAAO;UACdK,UAAU,EAAE,MAAM;UAClB,SAAS,EAAE;YACTD,eAAe,EAAE;UACnB;QACF;MACF;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAtDIZ,UAAU;EAAA,QACAG,QAAQ,EACLC,aAAa;AAAA;AAAAiC,EAAA,GAF1BrC,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}